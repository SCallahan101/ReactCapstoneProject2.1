{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/login.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Registration from './registrationPage';\nimport OpenEye from \"../SvgIcons/eye-regular.svg\";\nimport CloseEye from \"../SvgIcons/eye-slash-regular.svg\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.togglePeek = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        passwordIsMasked: !prevState.passwordIsMasked\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log(`From the form before FETCH: ${this.state.username} / ${this.state.password}`);\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(response => {\n        return response.json();\n      }).then(loggedInData => {\n        const authorID = JSON.stringify(loggedInData.userID);\n        const token = JSON.stringify(loggedInData.authToken);\n        console.log('Post-log test:' + authorID + ' ' + token);\n        localStorage.setItem('author', authorID);\n        localStorage.setItem('userToken', token); // this.props.history.push('/MainPage/ShortIntro');\n      }).then(() => {\n        this.props.history.push('/MainPage/ShortIntro');\n      }).catch(err => {\n        console.log(err);\n      }); // response.then(res => {\n      //   if(response.ok){\n      //     return res.json();\n      //   }\n      //   return res.json().then(err => {\n      //     Promise.reject(err);\n      //   })\n      // })\n      // .then(token => {\n      //   localStorage.setItem('userToken', token);\n      //   this.props.history.push('/MainPage/ShortIntro')\n      // })\n      // .catch((err) => {\n      //   console.log(err);\n      // });\n      // console.log(`${this.state.loginUsername} + ' ' + ${this.state.loginPw}`);\n    };\n\n    this.state = {\n      passwordIsMasked: true,\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const passwordIsMasked = this.state.passwordIsMasked;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"loginUsername\",\n      type: \"text\",\n      placeholder: \"Enter your username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"loginPw\",\n      type: passwordIsMasked ? 'password' : 'text',\n      placeholder: \"Enter your password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"togglePeek\",\n      onClick: this.togglePeek,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: OpenEye,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"login-btn login-draw-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Registration, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/login.js"],"names":["React","Component","Link","withRouter","Registration","Login","constructor","togglePeek","e","preventDefault","setState","prevState","passwordIsMasked","handleSubmit","console","log","state","username","password","response","fetch","method","headers","body","JSON","stringify","then","json","loggedInData","authorID","userID","token","authToken","localStorage","setItem","props","history","push","catch","err","render","target","value","OpenEye"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport Registration from './registrationPage';\nimport OpenEye from '../SvgIcons/eye-regular.svg';\nimport CloseEye from '../SvgIcons/eye-slash-regular.svg';\n\nclass Login extends Component {\n  constructor(){\n    super();\n    this.state={\n      passwordIsMasked: true,\n      username: '',\n      password: ''\n    }\n  }\n  togglePeek = (e) =>{\n    e.preventDefault();\n    this.setState(prevState => ({ passwordIsMasked: !prevState.passwordIsMasked}));\n};\nhandleSubmit = async e => {\n  e.preventDefault();\n  console.log(`From the form before FETCH: ${this.state.username} / ${this.state.password}`);\n    const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({username: this.state.username, password: this.state.password})\n  }).then((response) => {\n    return response.json();\n  }).then((loggedInData) => {\n    const authorID = JSON.stringify(loggedInData.userID);\n    const token = JSON.stringify(loggedInData.authToken);\n    console.log('Post-log test:' + authorID + ' ' + token);\n    localStorage.setItem('author', authorID);\n    localStorage.setItem('userToken', token);\n    // this.props.history.push('/MainPage/ShortIntro');\n  }).then(() => {\n    this.props.history.push('/MainPage/ShortIntro');\n  }).catch((err) => {\n      console.log(err);\n  });\n\n  // response.then(res => {\n  //   if(response.ok){\n  //     return res.json();\n  //   }\n  //   return res.json().then(err => {\n  //     Promise.reject(err);\n  //   })\n  // })\n  // .then(token => {\n  //   localStorage.setItem('userToken', token);\n  //   this.props.history.push('/MainPage/ShortIntro')\n  // })\n  // .catch((err) => {\n  //   console.log(err);\n  // });\n  // console.log(`${this.state.loginUsername} + ' ' + ${this.state.loginPw}`);\n};\n  render(){\n    const {passwordIsMasked} = this.state;\n    return(\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input className='loginUsername' type='text' placeholder='Enter your username' value={this.state.username} onChange={e => this.setState({username: e.target.value})}/>\n          <div className='passwordContainer'>\n          <input className='loginPw' type={passwordIsMasked ? 'password' : 'text'} placeholder='Enter your password' value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n          <button className='togglePeek'onClick={this.togglePeek} ><img src={OpenEye} /></button>\n          </div>\n          <br/>\n          <button type='submit' className='login-btn login-draw-border'>Login</button>\n        </form>\n        <Registration />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}