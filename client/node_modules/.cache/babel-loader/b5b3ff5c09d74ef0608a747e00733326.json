{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/registrationPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom'; // import MainPage from '../mainPage/mainPage';\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = error => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass Registration extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      event.preventDefault();\n      let errors = this.state.errors;\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/login/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email\n        })\n      });\n      this.setState({\n        open: false,\n        username: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        email: ''\n      });\n    };\n\n    this.state = {\n      open: false,\n      username: null,\n      password: null,\n      firstName: \"\",\n      lastName: \"\",\n      email: null,\n      errors: {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n      }\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel(e) {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"registrationBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"registration-btn reg-draw-border\",\n      onClick: e => this.togglePanel(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"New Storyteller\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.state.open ? React.createElement(\"form\", {\n      className: \"registrationForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"username reg-box\",\n      type: \"text\",\n      placeholder: \"Create your username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"password reg-box\",\n      type: \"text\",\n      placeholder: \"Create your password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"firstName reg-box\",\n      type: \"text\",\n      placeholder: \"Your first name?\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: e => this.setState({\n        firstName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"lastName reg-box\",\n      type: \"text\",\n      placeholder: \"Your last name?\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: e => this.setState({\n        lastName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"email reg-box\",\n      type: \"email\",\n      placeholder: \"Your Email?\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"register-btn reg-draw-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Register\")) : null);\n  }\n\n} // <Link to={'/'}><button className='login-btn login-draw-border'>Back to Login</button></Link>\n\n\nexport default Registration;","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/registrationPage.js"],"names":["React","Component","Route","Link","validEmailRegex","RegExp","validateForm","error","valid","Object","values","errors","forEach","val","length","Registration","constructor","handleChange","event","preventDefault","state","setState","target","name","value","handleSubmit","e","response","fetch","method","headers","body","JSON","stringify","username","password","firstName","lastName","email","open","togglePanel","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B,C,CACA;;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAAC,wHAAD,CAA9B;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcC,MAAd,EAAsBC,OAAtB,CACGC,GAAD,IAASA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBN,KAAK,GAAG,KAA3B,CADX;AAGA,SAAOA,KAAP;AACD,CAND;;AAQA,MAAMO,YAAN,SAA2Bd,SAA3B,CAAqC;AACnCe,EAAAA,WAAW,GAAE;AACX;;AADW,SAoBbC,YApBa,GAoBEC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIR,MAAM,GAAG,KAAKS,KAAL,CAAWT,MAAxB;AACF,WAAKU,QAAL,CAAc;AACZ,SAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AADtB,OAAd;AAGD,KA1Bc;;AAAA,SA2BfC,YA3Be,GA2BA,MAAMC,CAAN,IAAU;AACvBA,MAAAA,CAAC,CAACP,cAAF;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAD,EAA4B;AACtDC,QAAAA,MAAM,EAAE,MAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6C;AAKtDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWc,QAAtB;AAAgCC,UAAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWe,QAArD;AAA+DC,UAAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWgB,SAArF;AAAgGC,UAAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWiB,QAArH;AAA+HC,UAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB;AAAjJ,SAAf;AALgD,OAA5B,CAA5B;AAOA,WAAKjB,QAAL,CAAc;AACZkB,QAAAA,IAAI,EAAE,KADM;AAEZL,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,QAAQ,EAAE,EAHE;AAIZC,QAAAA,SAAS,EAAE,EAJC;AAKZC,QAAAA,QAAQ,EAAE,EALE;AAMZC,QAAAA,KAAK,EAAE;AANK,OAAd;AAQD,KA5Cc;;AAEX,SAAKlB,KAAL,GAAW;AACTmB,MAAAA,IAAI,EAAE,KADG;AAETL,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,QAAQ,EAAE,IAHD;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTC,MAAAA,KAAK,EAAE,IANE;AAOT3B,MAAAA,MAAM,EAAE;AACNuB,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNG,QAAAA,KAAK,EAAE;AAHD;AAPC,KAAX;AAaA,SAAKE,WAAL,GAAoB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAApB;AACD;;AACDD,EAAAA,WAAW,CAACd,CAAD,EAAG;AACZ,SAAKL,QAAL,CAAc;AAACkB,MAAAA,IAAI,EAAE,CAAC,KAAKnB,KAAL,CAAWmB;AAAnB,KAAd;AACD;;AA0BDG,EAAAA,MAAM,GAAE;AAAA,UACC/B,MADD,GACW,KAAKS,KADhB,CACCT,MADD;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,kCAAlB;AAAqD,MAAA,OAAO,EAAGe,CAAD,IAAO,KAAKc,WAAL,CAAiBd,CAAjB,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKN,KAAL,CAAWmB,IAAX,GACC;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,QAAQ,EAAE,KAAKd,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,WAAW,EAAC,sBAA5D;AAAmF,MAAA,IAAI,EAAC,UAAxF;AAAmG,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWc,QAArH;AAA+H,MAAA,QAAQ,EAAER,CAAC,IAAI,KAAKL,QAAL,CAAc;AAACa,QAAAA,QAAQ,EAAER,CAAC,CAACJ,MAAF,CAASE;AAApB,OAAd,CAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,WAAW,EAAC,sBAA5D;AAAmF,MAAA,IAAI,EAAC,UAAxF;AAAmG,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWe,QAArH;AAA+H,MAAA,QAAQ,EAAET,CAAC,IAAI,KAAKL,QAAL,CAAc;AAACc,QAAAA,QAAQ,EAAET,CAAC,CAACJ,MAAF,CAASE;AAApB,OAAd,CAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,WAAW,EAAC,kBAA7D;AAAgF,MAAA,IAAI,EAAC,WAArF;AAAiG,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWgB,SAAnH;AAA8H,MAAA,QAAQ,EAAEV,CAAC,IAAI,KAAKL,QAAL,CAAc;AAACe,QAAAA,SAAS,EAAEV,CAAC,CAACJ,MAAF,CAASE;AAArB,OAAd,CAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,WAAW,EAAC,iBAA5D;AAA8E,MAAA,IAAI,EAAC,UAAnF;AAA8F,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWiB,QAAhH;AAA0H,MAAA,QAAQ,EAAEX,CAAC,IAAI,KAAKL,QAAL,CAAc;AAACgB,QAAAA,QAAQ,EAAEX,CAAC,CAACJ,MAAF,CAASE;AAApB,OAAd,CAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAC,OAAtC;AAA8C,MAAA,WAAW,EAAC,aAA1D;AAAwE,MAAA,IAAI,EAAC,OAA7E;AAAqF,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWkB,KAAvG;AAA8G,MAAA,QAAQ,EAAEZ,CAAC,IAAI,KAAKL,QAAL,CAAc;AAACiB,QAAAA,KAAK,EAAEZ,CAAC,CAACJ,MAAF,CAASE;AAAjB,OAAd,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,8BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CADD,GAcE,IAjBL,CADF;AAqBD;;AArEkC,C,CAwE7B;;;AAER,eAAeT,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\n// import MainPage from '../mainPage/mainPage';\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validateForm = (error) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\n\nclass Registration extends Component {\n  constructor(){\n    super();\n    this.state={\n      open: false,\n      username: null,\n      password: null,\n      firstName: \"\",\n      lastName: \"\",\n      email: null,\n      errors: {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n      }\n    }\n    this.togglePanel =  this.togglePanel.bind(this);\n  }\n  togglePanel(e){\n    this.setState({open: !this.state.open})\n  }\n  handleChange = event => {\n    event.preventDefault();\n    let errors = this.state.errors;\n  this.setState({\n    [event.target.name]: event.target.value\n  });\n}\nhandleSubmit = async e =>{\n  e.preventDefault();\n  const response = await fetch('/api/login/registration', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({username: this.state.username, password: this.state.password, firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email}),\n  });\n  this.setState({\n    open: false,\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: ''\n  });\n};\n  render(){\n    const {errors} = this.state;\n    return(\n      <div className='registrationBoard'>\n        <button className='registration-btn reg-draw-border' onClick={(e) => this.togglePanel(e)}>New Storyteller</button>\n        <br />\n        {this.state.open ? (\n          <form className='registrationForm' onSubmit={this.handleSubmit}>\n            <input className='username reg-box' type='text' placeholder='Create your username' name='username' value={this.state.username} onChange={e => this.setState({username: e.target.value})}/>\n            <br />\n            <input className='password reg-box' type='text' placeholder='Create your password' name='password' value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n            <br />\n            <input className='firstName reg-box' type='text' placeholder='Your first name?' name='firstName' value={this.state.firstName} onChange={e => this.setState({firstName: e.target.value})}/>\n            <br />\n            <input className='lastName reg-box' type='text' placeholder='Your last name?' name='lastName' value={this.state.lastName} onChange={e => this.setState({lastName: e.target.value})}/>\n            <br />\n            <input className='email reg-box' type='email' placeholder='Your Email?' name='email' value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\n            <br />\n            <button type='submit' className='register-btn reg-draw-border'>Register</button>\n          </form>\n        ): null}\n      </div>\n    );\n  }\n}\n\n        // <Link to={'/'}><button className='login-btn login-draw-border'>Back to Login</button></Link>\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}