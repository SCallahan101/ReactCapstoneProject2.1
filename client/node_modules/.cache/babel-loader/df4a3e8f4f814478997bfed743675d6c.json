{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/login.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Registration from './registrationPage';\nimport OpenEye from \"../SvgIcons/eye-regular.svg\";\nimport CloseEye from \"../SvgIcons/eye-slash-regular.svg\";\nimport swal from 'sweetalert';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.togglePeek = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        passwordIsMasked: !prevState.passwordIsMasked\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log(`From the form before FETCH: ${this.state.username} / ${this.state.password}`);\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(response => {\n        return response.json();\n      }).then(loggedInData => {\n        const authorID = JSON.stringify(loggedInData.userID);\n        const token = JSON.stringify(loggedInData.authToken);\n        console.log('Post-log test:' + authorID + ' ' + token);\n        localStorage.setItem('author', authorID);\n        localStorage.setItem('userToken', token);\n      }).then(() => {\n        this.props.history.push('/MainPage/ShortIntro');\n      }).catch(err => {\n        console.log(err);\n        swal(\"Login Failed\", \"Please check your Username and/or Password again\", \"error\");\n      });\n    };\n\n    this.state = {\n      passwordIsMasked: true,\n      username: '',\n      password: ''\n    };\n  }\n\n  componentDidMount() {\n    swal({\n      title: \"Hello Writer!\",\n      text: \"This site is for writers who having writing blocks. My solution will providing you with various subconscious stimulations while you creating your storyline here. We all have been here before...your conscious is interfere with your thoughts.\",\n      icon: \"info\"\n    }).then(() => {\n      swal({\n        title: \"Materials\",\n        text: \"The site will be providing you with color psychology, theme word triggers, background pictures for your chapter setting, and visual cue of story progress \",\n        icon: \"info\"\n      });\n    });\n  }\n\n  render() {\n    const {\n      passwordIsMasked\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Demo Account:\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Username: TestUser01 | Password: TestUser01\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"loginUsername\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Type your Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"loginUsername\",\n      type: \"text\",\n      \"aria-label\": \"enter-your-existed-username\",\n      \"aria-required\": \"true\",\n      placeholder: \"Enter your username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"passwordContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"loginPw\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Type your Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"loginPw\",\n      type: passwordIsMasked ? 'password' : 'text',\n      \"aria-label\": \"enter-your-existed-password\",\n      \"aria-required\": \"true\",\n      placeholder: \"Enter your password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"togglePeek\",\n      onClick: this.togglePeek,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: OpenEye,\n      alt: \"toggle-eye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 68\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"login-btn login-draw-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(Registration, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/login.js"],"names":["React","Component","Link","withRouter","Registration","swal","Login","constructor","togglePeek","e","preventDefault","setState","prevState","passwordIsMasked","handleSubmit","console","log","state","username","password","response","fetch","method","headers","body","JSON","stringify","then","json","loggedInData","authorID","userID","token","authToken","localStorage","setItem","props","history","push","catch","err","componentDidMount","title","text","icon","render","target","value","OpenEye"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport Registration from './registrationPage';\nimport OpenEye from '../SvgIcons/eye-regular.svg';\nimport CloseEye from '../SvgIcons/eye-slash-regular.svg';\nimport swal from 'sweetalert';\n\nclass Login extends Component {\n  constructor(){\n    super();\n    this.state={\n      passwordIsMasked: true,\n      username: '',\n      password: ''\n    }\n  }\n  togglePeek = (e) =>{\n    e.preventDefault();\n    this.setState(prevState => ({ passwordIsMasked: !prevState.passwordIsMasked}));\n};\ncomponentDidMount(){\n  swal({\n  title: \"Hello Writer!\",\n  text: \"This site is for writers who having writing blocks. My solution will providing you with various subconscious stimulations while you creating your storyline here. We all have been here before...your conscious is interfere with your thoughts.\",\n  icon: \"info\",\n})\n.then(() => {\n    swal({\n      title: \"Materials\",\n      text: \"The site will be providing you with color psychology, theme word triggers, background pictures for your chapter setting, and visual cue of story progress \",\n      icon: \"info\",\n    })\n  });\n};\n\nhandleSubmit = async e => {\n  e.preventDefault();\n  console.log(`From the form before FETCH: ${this.state.username} / ${this.state.password}`);\n    const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({username: this.state.username, password: this.state.password})\n  }).then((response) => {\n    return response.json();\n  }).then((loggedInData) => {\n    const authorID = JSON.stringify(loggedInData.userID);\n    const token = JSON.stringify(loggedInData.authToken);\n    console.log('Post-log test:' + authorID + ' ' + token);\n    localStorage.setItem('author', authorID);\n    localStorage.setItem('userToken', token);\n  }).then(() => {\n    this.props.history.push('/MainPage/ShortIntro');\n  }).catch((err) => {\n      console.log(err);\n      swal(\"Login Failed\", \"Please check your Username and/or Password again\", \"error\");\n  });\n};\n  render(){\n    const {passwordIsMasked} = this.state;\n    return(\n      <div>\n        <div>\n          <p>Demo Account:</p>\n          <span>Username: TestUser01 | Password: TestUser01</span>\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"loginUsername\" hidden>Type your Username:</label>\n          <input className='loginUsername' type='text'  aria-label=\"enter-your-existed-username\" aria-required=\"true\" placeholder='Enter your username' value={this.state.username} onChange={e => this.setState({username: e.target.value})}/>\n          <div className='passwordContainer'>\n            <label htmlFor=\"loginPw\" hidden>Type your Password:</label>\n            <input className='loginPw' type={passwordIsMasked ? 'password' : 'text'}  aria-label=\"enter-your-existed-password\" aria-required=\"true\" placeholder='Enter your password' value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n            <span className='togglePeek'onClick={this.togglePeek} ><img src={OpenEye} alt=\"toggle-eye\"/></span>\n          </div>\n          <br/>\n          <button type='submit' className='login-btn login-draw-border'>Login</button>\n        </form>\n        <Registration />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}