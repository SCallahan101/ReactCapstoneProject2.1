{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Registration from './registrationPage';\nimport OpenEye from \"../SvgIcons/eye-regular.svg\";\nimport CloseEye from \"../SvgIcons/eye-slash-regular.svg\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = ({\n      target\n    }) => {\n      const loginValues = this.state.loginValues;\n      loginValues[target.name] = target.value;\n      this.setState({\n        loginValues\n      });\n      this.handleValidation(target);\n    };\n\n    this.handleValidation = target => {\n      const name = target.name,\n            value = target.value;\n      const fieldValidationErrors = this.state.loginErrors;\n      const validity = this.state.loginValidity;\n      const isUsername = name === 'username';\n      const isPassword = name === 'password';\n      const usernameTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      validity[name] = value.length > 0;\n      fieldValidationErrors[name] = validity[name] ? '' : `${name} is required and cannot be empty`;\n\n      if (validity[name]) {\n        if (isUsername) {\n          validity[name] = usernameTest.test(value);\n          fieldValidationErrors[name] = validity[name] ? '' : `${name} should be a valid username term`;\n        }\n\n        if (isPassword) {\n          validity[name] = value.length >= 3;\n          fieldValidationErrors[name] = validity[name] ? '' : `${name} should be 3 characters minimum`;\n        }\n      }\n\n      this.setState({\n        loginErrors: fieldValidationErrors,\n        loginValidity: validity\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      const _this$state = this.state,\n            loginValues = _this$state.loginValues,\n            loginValidity = _this$state.loginValidity;\n\n      if (Object.values(loginValidity).every(Boolean)) {\n        alert(\"Form is validated! Submitting the form...\");\n        this.setState({\n          isSubmitting: false\n        });\n      } else {\n        for (let key in loginValues) {\n          let target = {\n            name: key,\n            value: loginValues[key]\n          };\n          this.handleValidation(target);\n        }\n\n        this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    this.state = {\n      loginValues: {\n        loginUsername: '',\n        loginPassword: ''\n      },\n      loginErrors: {\n        loginUsername: '',\n        loginPassword: ''\n      },\n      loginValidity: {\n        loginUsername: false,\n        loginPassword: false\n      },\n      isSubmitting: false\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          loginValues = _this$state2.loginValues,\n          loginErrors = _this$state2.loginErrors,\n          isSubmitting = _this$state2.isSubmitting;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: `loginUsername ${loginErrors.email ? \"is-invalid\" : \"\"}`,\n      type: \"text\",\n      placeholder: \"Enter your username\",\n      onChange: this.handleChange,\n      value: loginValues.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, loginErrors.email)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: `loginPw ${loginErrors.password ? \"is-invalid\" : \"\"}`,\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      onChange: this.handleChange,\n      value: loginValues.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, loginErrors.password)), React.createElement(\"button\", {\n      className: \"togglePeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: OpenEye,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: '/MainPage/ShortIntro',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"login-btn login-draw-border\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, isSubmitting ? \"Please wait...\" : \"Submit\", \" Enter\"))), React.createElement(Registration, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/login.js"],"names":["React","Component","Link","Registration","Login","constructor","handleChange","target","loginValues","state","name","value","setState","handleValidation","fieldValidationErrors","loginErrors","validity","loginValidity","isUsername","isPassword","usernameTest","length","test","handleSubmit","e","preventDefault","isSubmitting","Object","values","every","Boolean","alert","key","loginUsername","loginPassword","render","email","password","OpenEye"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Registration from './registrationPage';\nimport OpenEye from '../SvgIcons/eye-regular.svg';\nimport CloseEye from '../SvgIcons/eye-slash-regular.svg';\n\nclass Login extends Component {\n  constructor(){\n    super();\n    this.state = {\n      loginValues: {\n        loginUsername: '',\n        loginPassword: ''\n      },\n      loginErrors: {\n        loginUsername: '',\n        loginPassword: ''\n      },\n      loginValidity: {\n        loginUsername: false,\n        loginPassword: false\n      },\n      isSubmitting: false\n    };\n  }\n  handleChange = ({target}) => {\n    const {loginValues} = this.state;\n    loginValues[target.name] = target.value;\n    this.setState({loginValues});\n    this.handleValidation(target);\n  };\n  handleValidation = target => {\n    const {name, value} = target;\n    const fieldValidationErrors = this.state.loginErrors;\n    const validity = this.state.loginValidity;\n    const isUsername = name === 'username';\n    const isPassword = name === 'password';\n    const usernameTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    validity[name] = value.length > 0;\n    fieldValidationErrors[name] = validity[name]\n    ? ''\n    : `${name} is required and cannot be empty`;\n    if (validity[name]){\n      if(isUsername){\n        validity[name] = usernameTest.test(value);\n        fieldValidationErrors[name] = validity[name]\n        ? ''\n        : `${name} should be a valid username term`;\n      }\n      if(isPassword){\n        validity[name] = value.length >= 3;\n        fieldValidationErrors[name] = validity[name]\n        ? ''\n        : `${name} should be 3 characters minimum`;\n      }\n    }\n    this.setState({\n      loginErrors: fieldValidationErrors,\n      loginValidity: validity\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({isSubmitting: true});\n    const {loginValues, loginValidity} = this.state;\n    if(Object.values(loginValidity).every(Boolean)){\n      alert(\"Form is validated! Submitting the form...\");\n      this.setState({isSubmitting: false});\n    }else{\n      for(let key in loginValues){\n        let target = {\n          name: key,\n          value: loginValues[key]\n        };\n        this.handleValidation(target);\n      }\n      this.setState({isSubmitting: false});\n    }\n  };\n  render(){\n    const {loginValues, loginErrors, isSubmitting} = this.state;\n    return(\n      <div>\n        <form>\n          <div>\n          <input className={`loginUsername ${loginErrors.email ? \"is-invalid\" : \"\"}`} type='text' placeholder='Enter your username' onChange={this.handleChange} value={loginValues.email} />\n          <div className='invalid-feedback'>{loginErrors.email}</div>\n          </div>\n          <div>\n          <input className={`loginPw ${loginErrors.password ? \"is-invalid\" : \"\"}`} type='password' placeholder='Enter your password' onChange={this.handleChange} value={loginValues.password} />\n          <div className='invalid-feedback'>{loginErrors.password}</div>\n          </div>\n          <button className='togglePeek' ><img src={OpenEye} /></button>\n          <br/>\n          <Link to={'/MainPage/ShortIntro'}><button className='login-btn login-draw-border' disabled={isSubmitting}>{isSubmitting ? \"Please wait...\" : \"Submit\"} Enter</button></Link>\n        </form>\n        <Registration />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}