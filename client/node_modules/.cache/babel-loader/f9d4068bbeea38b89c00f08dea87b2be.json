{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/registrationPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FormErrors } from './formErrors';\nimport { v4 as uuidv4 } from 'uuid';\nimport swal from 'sweetalert';\nimport OpenEye from \"../SvgIcons/eye-regular.svg\";\n\nclass Registration extends Component {\n  constructor() {\n    super();\n\n    this.togglePeek = e => {\n      e.preventDefault();\n      this.setState(prevState => ({\n        passwordIsMasked: !prevState.passwordIsMasked\n      }));\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const NewUserID = uuidv4();\n      const response = await fetch('/api/storytellers/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          userId: NewUserID\n        })\n      }).then(async response => {\n        const data = await response.json();\n\n        if (!response.ok) {\n          const error = data && data.message || response.status;\n          return Promise.reject(error);\n        } else {\n          swal(\"Congratulations!\", \"Your account registration has successfully submitted!\", \"success\");\n        }\n\n        this.setState({\n          open: false,\n          username: '',\n          password: '',\n          firstName: '',\n          lastName: '',\n          email: '',\n          userId: ''\n        });\n      }).catch(error => {\n        console.error('THere was an error!', error); // alert(error);\n\n        swal(\"Issue occurred!\", \"Error: \" + error, \"error\");\n      });\n    };\n\n    this.state = {\n      passwordIsMasked: true,\n      open: false,\n      username: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      userId: \"\",\n      formErrors: {\n        username: '',\n        password: '',\n        email: ''\n      },\n      usernameValid: false,\n      passwordValid: false,\n      emailValid: false\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel(e) {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid;\n    let passwordValid = this.state.passwordValid;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case 'username':\n        usernameValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        usernameValid = value.length > 8;\n        fieldValidationErrors.email = usernameValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length > 8;\n        fieldValidationErrors.password = passwordValid ? '' : ' need 9 characters or more';\n        break;\n\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has error';\n  }\n\n  render() {\n    const {\n      passwordIsMasked\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"registrationBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"registration-btn reg-draw-border\",\n      onClick: e => this.togglePanel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Create a Storyteller Account\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), this.state.open ? /*#__PURE__*/React.createElement(\"form\", {\n      className: \"registrationForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.errorClass(this.state.formErrors.password)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"username reg-box\",\n      type: \"text\",\n      placeholder: \"Create your username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"passwordContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"password reg-box\",\n      type: passwordIsMasked ? 'password' : 'text',\n      placeholder: \"Create your password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"togglePeekReg\",\n      onClick: this.togglePeek,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: OpenEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 71\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"firstName reg-box\",\n      type: \"text\",\n      placeholder: \"Your first name?\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: e => this.setState({\n        firstName: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"lastName reg-box\",\n      type: \"text\",\n      placeholder: \"Your last name?\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: e => this.setState({\n        lastName: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `form-group ${this.errorClass(this.state.formErrors.email)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"email reg-box\",\n      type: \"email\",\n      placeholder: \"Your Email?\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"register-btn reg-draw-border\",\n      disabled: !this.state.formValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"register-btn reg-draw-border\",\n      onClick: e => this.togglePanel(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Cancel\")) : null);\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/registrationPage.js"],"names":["React","Component","Route","Link","FormErrors","v4","uuidv4","swal","Registration","constructor","togglePeek","e","preventDefault","setState","prevState","passwordIsMasked","handleChange","name","target","value","validateField","handleSubmit","NewUserID","response","fetch","method","headers","body","JSON","stringify","username","state","password","firstName","lastName","email","userId","then","data","json","ok","error","message","status","Promise","reject","open","catch","console","formErrors","usernameValid","passwordValid","emailValid","togglePanel","bind","fieldName","fieldValidationErrors","match","length","validateForm","formValid","errorClass","render","OpenEye"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FormErrors} from './formErrors';\nimport { v4 as uuidv4 } from 'uuid';\nimport swal from 'sweetalert';\nimport OpenEye from '../SvgIcons/eye-regular.svg';\n\nclass Registration extends Component {\n  constructor(){\n    super();\n    this.state={\n      passwordIsMasked: true,\n      open: false,\n      username: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      userId: \"\",\n      formErrors:{username: '', password: '', email: ''},\n      usernameValid: false,\n      passwordValid: false,\n      emailValid: false\n    }\n    this.togglePanel =  this.togglePanel.bind(this);\n  }\n  togglePanel(e){\n    this.setState({open: !this.state.open})\n  }\n  togglePeek = (e) =>{\n    e.preventDefault();\n    this.setState(prevState => ({ passwordIsMasked: !prevState.passwordIsMasked}));\n};\nhandleChange = (e) => {\n  const name = e.target.name;\n  const value = e.target.value;\n  this.setState({[name]: value},\n  () => {this.validateField(name, value) });\n}\nvalidateField(fieldName, value){\n  let fieldValidationErrors = this.state.formErrors;\n  let usernameValid = this.state.usernameValid;\n  let passwordValid = this.state.passwordValid;\n  let emailValid = this.state.emailValid;\n\n  switch(fieldName){\n    case 'username':\n    usernameValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    usernameValid = value.length > 8;\n    fieldValidationErrors.email = usernameValid ? '' : ' is invalid';\n    break;\n    case 'password':\n    passwordValid = value.length > 8;\n    fieldValidationErrors.password = passwordValid ? '' : ' need 9 characters or more';\n    break;\n    case 'email':\n    emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n    break;\n    default:\n    break;\n  }\n  this.setState({formErrors: fieldValidationErrors,\n                 emailValid: emailValid,\n                 passwordValid: passwordValid\n               }, this.validateForm);\n}\nvalidateForm(){\n  this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n}\nerrorClass(error){\n  return(error.length === 0 ? '' : 'has error');\n}\nhandleSubmit = async e =>{\n  e.preventDefault();\n  const NewUserID = uuidv4();\n  const response = await fetch('/api/storytellers/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({username: this.state.username, password: this.state.password, firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, userId: NewUserID}),\n  })\n  .then(async response => {\n    const data = await response.json();\n    if(!response.ok){\n      const error = (data && data.message) || response.status;\n      return Promise.reject(error);\n    } else {\n      swal(\"Congratulations!\", \"Your account registration has successfully submitted!\", \"success\");\n    }\n    this.setState({\n      open: false,\n      username: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      userId: ''\n    });\n  })\n  .catch(error =>{\n    console.error('THere was an error!', error);\n    // alert(error);\n    swal(\"Issue occurred!\", \"Error: \" + error, \"error\");\n  });\n};\n  render(){\n    const {passwordIsMasked} = this.state;\n    return(\n      <div className='registrationBoard'>\n        <button className='registration-btn reg-draw-border' onClick={(e) => this.togglePanel(e)}>Create a Storyteller Account</button>\n        <br />\n        {this.state.open ? (\n          <form className='registrationForm' onSubmit={this.handleSubmit}>\n            <FormErrors formErrors={this.state.formErrors} />\n            <div className={`${this.errorClass(this.state.formErrors.password)}`}></div>\n            <input className='username reg-box' type='text' placeholder='Create your username' name='username' value={this.state.username} onChange={e => this.setState({username: e.target.value})}/>\n            <div className='passwordContainer'>\n            <input className='password reg-box' type={passwordIsMasked ? 'password' : 'text'} placeholder='Create your password' name='password' value={this.state.password} onChange={this.handleChange} />\n            <span className='togglePeekReg'onClick={this.togglePeek} ><img src={OpenEye} /></span>\n            </div>\n            <br />\n            <input className='firstName reg-box' type='text' placeholder='Your first name?' name='firstName' value={this.state.firstName} onChange={e => this.setState({firstName: e.target.value})}/>\n            <input className='lastName reg-box' type='text' placeholder='Your last name?' name='lastName' value={this.state.lastName} onChange={e => this.setState({lastName: e.target.value})}/>\n            <br />\n            <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`} >\n            <input className='email reg-box' type='email' placeholder='Your Email?' name='email' value={this.state.email} onChange={this.handleChange} />\n            </div>\n            <button type='submit' className='register-btn reg-draw-border' disabled={!this.state.formValid}>Register</button>\n            <button type='button' className='register-btn reg-draw-border' onClick={(e) => this.togglePanel(e)}>Cancel</button>\n          </form>\n        ): null}\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}