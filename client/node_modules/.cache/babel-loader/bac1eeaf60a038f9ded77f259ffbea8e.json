{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/mainPage/ideaSuggestions.js\";\nimport React from 'react';\nimport shuffle from 'shuffle-array';\nconst suggestions = [{\n  option: \"Romance\"\n}, {\n  option: \"Warzone\"\n}, {\n  option: \"Twist moment\"\n}, {\n  option: \"Betrayal\"\n}, {\n  option: \"Moment of truth\"\n}, {\n  option: \"Befriend\"\n}, {\n  option: \"Coming home\"\n}, {\n  option: \"Discover\"\n}, {\n  option: \"Ambush\"\n}, {\n  option: \"Murdered\"\n}, {\n  option: \"Suspense\"\n}, {\n  option: \"Crossroad\"\n}, {\n  option: \"Spying\"\n}, {\n  option: \"Following Clues\"\n}, {\n  option: \"Loss\"\n}, {\n  option: \"Bizarre\"\n}, {\n  option: \"Disease /Virus /Ravage\"\n}, {\n  option: \"Family Dispute\"\n}];\nconst i = 0;\nconst intervalId = setInterval(function () {\n  shuffle(suggestions);\n\n  if (i === 10) {\n    clearInterval(intervalId);\n  }\n\n  i++;\n}, 1000); // setInterval(() => {\n//   shuffle(suggestions);\n// }, 1000);\n\nconst SuggestionsList = () => React.createElement(\"ul\", {\n  className: \"listOfSuggestions\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, suggestions.map(idea => React.createElement(\"li\", {\n  className: \"singleSuggestion\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"\\uD83D\\uDC4B \", idea.option))));\n\nexport default SuggestionsList;","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/mainPage/ideaSuggestions.js"],"names":["React","shuffle","suggestions","option","i","intervalId","setInterval","clearInterval","SuggestionsList","map","idea"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,WAAW,GAAG,CAClB;AAACC,EAAAA,MAAM,EAAE;AAAT,CADkB,EAGlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAHkB,EAKlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CALkB,EAOlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAPkB,EASlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CATkB,EAWlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAXkB,EAalB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAbkB,EAelB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAfkB,EAiBlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAjBkB,EAmBlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAnBkB,EAqBlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CArBkB,EAuBlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAvBkB,EAyBlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAzBkB,EA2BlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CA3BkB,EA6BlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CA7BkB,EA+BlB;AAACA,EAAAA,MAAM,EAAE;AAAT,CA/BkB,EAiClB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAjCkB,EAmClB;AAACA,EAAAA,MAAM,EAAE;AAAT,CAnCkB,CAApB;AAuCA,MAAMC,CAAC,GAAG,CAAV;AACA,MAAMC,UAAU,GAAGC,WAAW,CAAC,YAAU;AACvCL,EAAAA,OAAO,CAACC,WAAD,CAAP;;AACA,MAAGE,CAAC,KAAK,EAAT,EAAY;AACVG,IAAAA,aAAa,CAACF,UAAD,CAAb;AACD;;AACDD,EAAAA,CAAC;AACF,CAN6B,EAM3B,IAN2B,CAA9B,C,CAOA;AACA;AACA;;AAEA,MAAMI,eAAe,GAAG,MACtB;AAAI,EAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGN,WAAW,CAACO,GAAZ,CAAgBC,IAAI,IACnB;AAAI,EAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAASA,IAAI,CAACP,MAAd,CADF,CADD,CADH,CADF;;AAUA,eAAeK,eAAf","sourcesContent":["import React from 'react';\nimport shuffle from 'shuffle-array';\n\nconst suggestions = [\n  {option: \"Romance\"\n  },\n  {option: \"Warzone\"\n  },\n  {option: \"Twist moment\"\n  },\n  {option: \"Betrayal\"\n  },\n  {option: \"Moment of truth\"\n  },\n  {option: \"Befriend\"\n  },\n  {option: \"Coming home\"\n  },\n  {option: \"Discover\"\n  },\n  {option: \"Ambush\"\n  },\n  {option: \"Murdered\"\n  },\n  {option: \"Suspense\"\n  },\n  {option: \"Crossroad\"\n  },\n  {option: \"Spying\"\n  },\n  {option: \"Following Clues\"\n  },\n  {option: \"Loss\"\n  },\n  {option: \"Bizarre\"\n  },\n  {option: \"Disease /Virus /Ravage\"\n  },\n  {option: \"Family Dispute\"\n  },\n];\n\nconst i = 0;\nconst intervalId = setInterval(function(){\n  shuffle(suggestions);\n  if(i === 10){\n    clearInterval(intervalId);\n  }\n  i++;\n}, 1000)\n// setInterval(() => {\n//   shuffle(suggestions);\n// }, 1000);\n\nconst SuggestionsList = () => (\n  <ul className='listOfSuggestions'>\n    {suggestions.map(idea => (\n      <li className='singleSuggestion'>\n        <div>ðŸ‘‹ {idea.option}</div>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default SuggestionsList;\n"]},"metadata":{},"sourceType":"module"}