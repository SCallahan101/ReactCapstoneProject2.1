{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/createTheStory/addChapterForm.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport WindowCloseSvg from \"../SvgIcons/window-close-regular.svg\";\nimport swal from 'sweetalert';\nimport ModalBox from './modal';\n\nclass ListToAdd extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chapterNum: '',\n      title: '',\n      content: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/ChaptersForStory/all');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const localAuthor = localStorage.getItem('author');\n      const idAuthor = localAuthor.replace(/['\"]+/g, '');\n      console.log('Phase: ' + idAuthor); // console.log(idAuthor.replace(/['\"]+/g, ''));\n\n      const response = await fetch('/api/ChaptersForStory/all', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: idAuthor,\n          chapterNum: this.state.chapterNum,\n          title: this.state.title,\n          content: this.state.content\n        })\n      }).then(response => {\n        const data = response.json();\n        console.log(data.type, data.message);\n\n        if (!response.ok) {\n          const error = data && data.message || response.status;\n          console.log(\"test\" + error);\n          return Promise.reject(error);\n        } else {\n          swal(\"Confirmed!\", \"Your new additional chapter has been added to your Storyline!\", \"success\");\n          this.setState({\n            chapterNum: '',\n            title: '',\n            show: false\n          });\n        }\n      }).catch(error => {\n        console.error(\"Error: \", error);\n        swal(\"ERROR!\", \"Something amissing or wrong input: \" + error, \"error\");\n      });\n    };\n\n    this.state = {\n      show: false\n    };\n\n    this.showModal = e => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chapterModalContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"modal outside-btn\",\n      onClick: e => {\n        this.showModal(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Fill out chapter information\"), /*#__PURE__*/React.createElement(ModalBox, {\n      onClose: this.showModal,\n      show: this.state.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"fillingStory\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"chapterNumber\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Chapter Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"chapterNumber\",\n      type: \"text\",\n      \"aria-label\": \"type-in-chapter-number\",\n      \"aria-required\": \"true\",\n      placeholder: \"Chapter-nth?\",\n      value: this.state.chapterNum,\n      onChange: e => this.setState({\n        chapterNum: e.target.value\n      }),\n      name: \"chapter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"titleInput\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Create Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"titleInput\",\n      type: \"text\",\n      \"aria-label\": \"create-a-title\",\n      \"aria-required\": \"true\",\n      placeholder: \"Type your title\",\n      value: this.state.title,\n      onChange: e => this.setState({\n        title: e.target.value\n      }),\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"storyBox\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Create Content:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"storyBox\",\n      \"aria-label\": \"create-your-chapter-story\",\n      \"aria-required\": \"true\",\n      placeholder: \"Type your story down here!\",\n      value: this.setState.content,\n      onChange: e => this.setState({\n        content: e.target.value\n      }),\n      name: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"chapterSubmit\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Add Chapter \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"modal inside-btn\",\n      onClick: e => {\n        this.showModal(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: WindowCloseSvg,\n      alt: \"X-mark-cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 86\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \" \"))));\n  }\n\n}\n\nexport default ListToAdd;","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/createTheStory/addChapterForm.js"],"names":["React","Component","NavLink","swal","ModalBox","ListToAdd","state","chapterNum","title","content","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","localAuthor","localStorage","getItem","idAuthor","replace","console","log","method","headers","JSON","stringify","userId","then","data","type","ok","error","Promise","reject","setState","show","catch","showModal","componentDidMount","res","express","err","render","target","value","WindowCloseSvg"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport WindowCloseSvg from '../SvgIcons/window-close-regular.svg';\nimport swal from 'sweetalert';\nimport ModalBox from './modal';\n\nclass ListToAdd extends Component {\n  state = {\n    chapterNum: '',\n    title: '',\n    content: '',\n  };\n\n  componentDidMount(){\n    this.callApi()\n    .then(res => this.setState({response: res.express}))\n    .catch(err => console.log(err));\n  }\n  callApi = async () => {\n    const response = await fetch('/api/ChaptersForStory/all');\n    const body = await response.json();\n    if(response.status !== 200) throw Error(body.message);\n    return body;\n  };\n  handleSubmit = async e =>{\n    e.preventDefault();\n    const localAuthor = localStorage.getItem('author');\n    const idAuthor = localAuthor.replace(/['\"]+/g, '');\n    console.log('Phase: ' + idAuthor);\n    // console.log(idAuthor.replace(/['\"]+/g, ''));\n    const response = await fetch('/api/ChaptersForStory/all', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({userId: idAuthor, chapterNum: this.state.chapterNum, title: this.state.title, content: this.state.content}),\n    })\n    .then(response => {\n          const data = response.json();\n          console.log(data.type, data.message);\n          if(!response.ok){\n            const error = (data && data.message) || response.status;\n            console.log(\"test\" + error);\n            return Promise.reject(error);\n          } else {\n            swal(\"Confirmed!\", \"Your new additional chapter has been added to your Storyline!\", \"success\");\n            this.setState({\n              chapterNum: '',\n              title: '',\n              show: false\n            });\n          }\n        })\n    .catch((error) => {\n      console.error(\"Error: \", error);\n      swal(\"ERROR!\", \"Something amissing or wrong input: \" + error, \"error\");\n    });\n  };\n  state = {\n    show: false\n  };\n  showModal = e => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n  render(){\n    return (\n      <div className='chapterModalContainer'>\n        <button className='modal outside-btn' onClick={e => { this.showModal(e); }}>Fill out chapter information</button>\n        <ModalBox onClose={this.showModal} show={this.state.show}>\n        <form className='fillingStory' onSubmit={this.handleSubmit}>\n          <label htmlFor=\"chapterNumber\" hidden>Chapter Number:</label>\n          <input className='chapterNumber' type='text' aria-label=\"type-in-chapter-number\" aria-required=\"true\" placeholder='Chapter-nth?' value={this.state.chapterNum} onChange={e => this.setState({chapterNum: e.target.value})} name='chapter' />\n          <br />\n          <label htmlFor=\"titleInput\" hidden>Create Title:</label>\n          <input className='titleInput' type='text' aria-label=\"create-a-title\" aria-required=\"true\" placeholder='Type your title' value={this.state.title} onChange={e => this.setState({title: e.target.value})} name='title' />\n          <br />\n          <label htmlFor=\"storyBox\" hidden>Create Content:</label>\n          <textarea className='storyBox'  aria-label=\"create-your-chapter-story\" aria-required=\"true\" placeholder='Type your story down here!' value={this.setState.content} onChange={e => this.setState({content: e.target.value})} name='content'></textarea>\n          <button className='chapterSubmit' type='submit'>Add Chapter </button>\n          <button className='modal inside-btn' onClick={e => { this.showModal(e); }}><img src={WindowCloseSvg} alt=\"X-mark-cancel\"/></button>\n          <span> </span>\n        </form>\n        </ModalBox>\n      </div>\n    )\n  }\n}\n\nexport default ListToAdd;\n"]},"metadata":{},"sourceType":"module"}