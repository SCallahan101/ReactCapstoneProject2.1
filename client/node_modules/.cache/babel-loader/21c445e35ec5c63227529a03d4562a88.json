{"ast":null,"code":"var _jsxFileName = \"/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/registrationPage.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FormErrors } from './formErrors'; // import MainPage from '../mainPage/mainPage';\n\nimport { v1 as uuidv4 } from 'uuid';\n\nclass Registration extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/storytellers/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          userId: this.state.userId\n        })\n      });\n      this.setState({\n        open: false,\n        username: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        userId: uuidv1()\n      });\n    };\n\n    this.state = {\n      open: false,\n      username: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      userId: \"\",\n      formErrors: {\n        username: '',\n        password: '',\n        email: ''\n      },\n      usernameValid: false,\n      passwordValid: false,\n      emailValid: false\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel(e) {\n    this.setState({\n      open: !this.state.open\n    });\n  } //   handleChange = e => {\n  //   this.setState({\n  //     [e.target.name]: e.target.value\n  //   });\n  // }\n\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid;\n    let passwordValid = this.state.passwordValid;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case 'username':\n        usernameValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        usernameValid = value.length > 8;\n        fieldValidationErrors.email = usernameValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length > 8;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n        break;\n\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has error';\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"registrationBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"registration-btn reg-draw-border\",\n      onClick: e => this.togglePanel(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Create a Storyteller Account\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.state.open ? React.createElement(\"form\", {\n      className: \"registrationForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `${this.errorClass(this.state.formErrors.password)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"username reg-box\",\n      type: \"text\",\n      placeholder: \"Create your username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"password reg-box\",\n      type: \"text\",\n      placeholder: \"Create your password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"firstName reg-box\",\n      type: \"text\",\n      placeholder: \"Your first name?\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: e => this.setState({\n        firstName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"lastName reg-box\",\n      type: \"text\",\n      placeholder: \"Your last name?\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: e => this.setState({\n        lastName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `form-group ${this.errorClass(this.state.formErrors.email)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"email reg-box\",\n      type: \"email\",\n      placeholder: \"Your Email?\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"register-btn reg-draw-border\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Register\")) : null);\n  }\n\n} // <Link to={'/'}><button className='login-btn login-draw-border'>Back to Login</button></Link>\n\n\nexport default Registration;","map":{"version":3,"sources":["/home/shannon/Documents/Thinkful_Github/Capstones/react-project-2.1/client/src/welcome/registrationPage.js"],"names":["React","Component","Route","Link","FormErrors","v1","uuidv4","Registration","constructor","handleChange","e","name","target","value","setState","validateField","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","state","password","firstName","lastName","email","userId","open","uuidv1","formErrors","usernameValid","passwordValid","emailValid","togglePanel","bind","fieldName","fieldValidationErrors","match","length","validateForm","formValid","errorClass","error","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FormErrors} from './formErrors';\n// import MainPage from '../mainPage/mainPage';\nimport { v1 as uuidv4 } from 'uuid';\n\n\nclass Registration extends Component {\n  constructor(){\n    super();\n    this.state={\n      open: false,\n      username: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      userId: \"\",\n      formErrors:{username: '', password: '', email: ''},\n      usernameValid: false,\n      passwordValid: false,\n      emailValid: false\n    }\n    this.togglePanel =  this.togglePanel.bind(this);\n  }\n  togglePanel(e){\n    this.setState({open: !this.state.open})\n  }\n//   handleChange = e => {\n//   this.setState({\n//     [e.target.name]: e.target.value\n//   });\n// }\nhandleChange = (e) => {\n  const name = e.target.name;\n  const value = e.target.value;\n  this.setState({[name]: value},\n  () => {this.validateField(name, value) });\n}\nvalidateField(fieldName, value){\n  let fieldValidationErrors = this.state.formErrors;\n  let usernameValid = this.state.usernameValid;\n  let passwordValid = this.state.passwordValid;\n  let emailValid = this.state.emailValid;\n\n  switch(fieldName){\n    case 'username':\n    usernameValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    usernameValid = value.length > 8;\n    fieldValidationErrors.email = usernameValid ? '' : ' is invalid';\n    break;\n    case 'password':\n    passwordValid = value.length > 8;\n    fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n    break;\n    case 'email':\n    emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n    break;\n    default:\n    break;\n  }\n  this.setState({formErrors: fieldValidationErrors,\n                 emailValid: emailValid,\n                 passwordValid: passwordValid\n               }, this.validateForm);\n}\nvalidateForm(){\n  this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n}\nerrorClass(error){\n  return(error.length === 0 ? '' : 'has error');\n}\nhandleSubmit = async e =>{\n  e.preventDefault();\n  const response = await fetch('/api/storytellers/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({username: this.state.username, password: this.state.password, firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, userId: this.state.userId}),\n  });\n  this.setState({\n    open: false,\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    userId: uuidv1()\n  });\n};\n  render(){\n    return(\n      <div className='registrationBoard'>\n        <button className='registration-btn reg-draw-border' onClick={(e) => this.togglePanel(e)}>Create a Storyteller Account</button>\n        <br />\n        {this.state.open ? (\n          <form className='registrationForm' onSubmit={this.handleSubmit}>\n            <FormErrors formErrors={this.state.formErrors} />\n            <div className={`${this.errorClass(this.state.formErrors.password)}`}></div>\n            <input className='username reg-box' type='text' placeholder='Create your username' name='username' value={this.state.username} onChange={e => this.setState({username: e.target.value})}/>\n            <input className='password reg-box' type='text' placeholder='Create your password' name='password' value={this.state.password} onChange={this.handleChange} />\n            <br />\n            <input className='firstName reg-box' type='text' placeholder='Your first name?' name='firstName' value={this.state.firstName} onChange={e => this.setState({firstName: e.target.value})}/>\n            <input className='lastName reg-box' type='text' placeholder='Your last name?' name='lastName' value={this.state.lastName} onChange={e => this.setState({lastName: e.target.value})}/>\n            <br />\n            <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`} >\n            <input className='email reg-box' type='email' placeholder='Your Email?' name='email' value={this.state.email} onChange={this.handleChange} />\n            </div>\n            <button type='submit' className='register-btn reg-draw-border' disabled={!this.state.formValid}>Register</button>\n          </form>\n        ): null}\n      </div>\n    );\n  }\n}\n\n        // <Link to={'/'}><button className='login-btn login-draw-border'>Back to Login</button></Link>\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}